<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/GitHubProjects/you-get/tests/test.py" timestamp="1486938522146">
        <mark key="'" line="20" column="8" />
      </file>
      <file name="/Python Console" timestamp="1487419413686">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="^" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="/fragment.py" timestamp="1487415105986">
        <mark key="[" line="0" column="0" />
        <mark key="." line="0" column="17" />
      </file>
      <file name="$APPLICATION_HOME_DIR$/helpers/pydev/_pydev_imps/_pydev_execfile.py" timestamp="1487405339639">
        <mark key="'" line="17" column="0" />
      </file>
      <file name="/usr/lib/python3.6/site-packages/you_get/json_output.py" timestamp="1487404917962">
        <mark key="'" line="6" column="15" />
        <mark key="[" line="6" column="0" />
        <mark key="]" line="16" column="30" />
      </file>
      <file name="$USER_HOME$/GitHubProjects/you-get/contrib/completion/you-get-completion.bash" timestamp="1486938596337">
        <mark key="'" line="23" column="0" />
      </file>
      <file name="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/echo_ckeyv3.py" timestamp="1487128058227">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="62" column="16" />
        <mark key="." line="4" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/extractors/youku.py" timestamp="1487416691798">
        <mark key="'" line="336" column="17" />
      </file>
      <file name="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/pinterest.py" timestamp="1486948804486">
        <mark key="'" line="39" column="48" />
      </file>
      <file name="/usr/lib/python3.6/site-packages/you_get/extractors/qq.py" timestamp="1487407243053">
        <mark key="'" line="23" column="12" />
      </file>
      <file name="/usr/lib/python3.6/site-packages/you_get/extractor.py" timestamp="1487404911266">
        <mark key="'" line="162" column="12" />
        <mark key="[" line="160" column="0" />
        <mark key="]" line="218" column="30" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/video-simple-backend/video-simple-backend.py" timestamp="1487419410752">
        <mark key="'" line="84" column="20" />
        <mark key="[" line="84" column="43" />
        <mark key="]" line="85" column="12" />
        <mark key="." line="85" column="12" />
        <mark key="^" line="85" column="12" />
      </file>
      <file name="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" timestamp="1487415510736">
        <mark key="'" line="206" column="16" />
        <mark key="[" line="207" column="57" />
        <mark key="]" line="196" column="109" />
        <mark key="^" line="201" column="109" />
        <mark key="." line="207" column="57" />
      </file>
      <file name="/Dummy.txt" timestamp="1487413686691">
        <mark key="[" line="0" column="0" />
        <mark key="." line="0" column="52" />
      </file>
      <file name="/usr/lib/python3.6/shlex.py" timestamp="1486934419231">
        <mark key="'" line="58" column="8" />
      </file>
      <file name="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youtube.py" timestamp="1487120877187">
        <mark key="'" line="12" column="4" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/json_output.py" timestamp="1487419006683">
        <mark key="'" line="36" column="9" />
        <mark key="[" line="12" column="0" />
        <mark key="]" line="13" column="71" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/extractors/qq.py" timestamp="1487407383829">
        <mark key="'" line="235" column="0" />
      </file>
      <file name="/usr/lib/python3.6/site-packages/you_get/extractors/youku.py" timestamp="1487403424485">
        <mark key="'" line="393" column="17" />
      </file>
      <file name="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" timestamp="1487414109677">
        <mark key="'" line="11" column="12" />
        <mark key="[" line="4" column="0" />
        <mark key="]" line="4" column="0" />
        <mark key="." line="4" column="0" />
        <mark key="^" line="4" column="13" />
      </file>
      <file name="/usr/lib/python3.6/site-packages/you_get/common.py" timestamp="1487401325355">
        <mark key="'" line="1131" column="0" />
        <mark key="[" line="1125" column="0" />
        <mark key="]" line="1135" column="35" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/extractor.py" timestamp="1487416612325">
        <mark key="'" line="133" column="18" />
        <mark key="[" line="206" column="0" />
        <mark key="]" line="209" column="78" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" timestamp="1487418888054">
        <mark key="'" line="1277" column="16" />
        <mark key="[" line="448" column="0" />
        <mark key="]" line="448" column="0" />
        <mark key="." line="448" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/extractors/youtube.py" timestamp="1487419437592">
        <mark key="'" line="139" column="0" />
      </file>
      <file name="$USER_HOME$/GitHubProjects/you-get/README.md" timestamp="1486941586042">
        <mark key="'" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/GitHubProjects/you-get/src/you_get/json_output.py" timestamp="1487413694680">
        <mark key="'" line="35" column="4" />
        <mark key="[" line="13" column="0" />
        <mark key="]" line="13" column="26" />
        <mark key="^" line="13" column="26" />
        <mark key="." line="14" column="12" />
      </file>
      <file name="$USER_HOME$/GitHubProjects/you-get/tests/test_util.py" timestamp="1486938503562">
        <mark key="'" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/imgur.py" timestamp="1486945878329">
        <mark key="'" line="19" column="6" />
      </file>
    </filemarks>
    <jumps>
      <jump line="175" column="20" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="201" column="67" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="209" column="61" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="332" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="265" column="8" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="151" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="153" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="156" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="160" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="167" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="171" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="206" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="211" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="214" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="217" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="283" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="275" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="270" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="223" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="240" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="264" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="247" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="11" column="12" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractors/youku.py" />
      <jump line="160" column="12" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="225" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="224" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="221" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="202" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="191" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="186" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="178" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="159" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="154" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="148" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="134" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="128" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="120" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="115" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="109" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="107" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="102" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="96" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="99" column="0" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="9" column="8" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="206" column="16" filename="$USER_HOME$/GitHubProjects/you-get/src/you_get/extractor.py" />
      <jump line="180" column="27" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/extractor.py" />
      <jump line="186" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/extractor.py" />
      <jump line="191" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/extractor.py" />
      <jump line="202" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/extractor.py" />
      <jump line="221" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/extractor.py" />
      <jump line="833" column="8" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="509" column="4" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="206" column="24" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/extractor.py" />
      <jump line="795" column="8" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="802" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="806" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="814" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="819" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="828" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="847" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="807" column="21" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="793" column="88" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="809" column="62" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="423" column="4" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="51" column="54" filename="$USER_HOME$/PycharmProjects/video-simple-backend/video-simple-backend.py" />
      <jump line="133" column="18" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/extractor.py" />
      <jump line="336" column="17" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/extractors/youku.py" />
      <jump line="47" column="15" filename="$USER_HOME$/PycharmProjects/video-simple-backend/video-simple-backend.py" />
      <jump line="82" column="16" filename="$USER_HOME$/PycharmProjects/video-simple-backend/video-simple-backend.py" />
      <jump line="76" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/video-simple-backend.py" />
      <jump line="1" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/video-simple-backend.py" />
      <jump line="10" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/video-simple-backend.py" />
      <jump line="24" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/video-simple-backend.py" />
      <jump line="33" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/video-simple-backend.py" />
      <jump line="38" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/video-simple-backend.py" />
      <jump line="65" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/video-simple-backend.py" />
      <jump line="68" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/video-simple-backend.py" />
      <jump line="78" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/video-simple-backend.py" />
      <jump line="86" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/video-simple-backend.py" />
      <jump line="89" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/video-simple-backend.py" />
      <jump line="87" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/video-simple-backend.py" />
      <jump line="1193" column="4" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="1199" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="1203" column="12" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="445" column="8" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="3" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="448" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="272" column="12" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="295" column="12" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="303" column="12" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="117" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="97" column="7" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="114" column="14" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="172" column="8" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="84" column="20" filename="$USER_HOME$/PycharmProjects/video-simple-backend/video-simple-backend.py" />
      <jump line="1" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="1277" column="16" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/common.py" />
      <jump line="45" column="5" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/json_output.py" />
      <jump line="36" column="9" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/json_output.py" />
      <jump line="139" column="0" filename="$USER_HOME$/PycharmProjects/video-simple-backend/you_get/extractors/youtube.py" />
    </jumps>
    <registers>
      <register name="&quot;" type="4">
        <text>s_url</text>
      </register>
      <register name="-" type="4">
        <text>s_url</text>
      </register>
      <register name="/" type="4">
        <text>help</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgICAgICAndmlkZW9fcHJvZmlsZSc6IHNlbGYuc3RyZWFtc1tzdHJlYW1faWRdWyd2aWRlb19wcm9maWxlJ10sCg==</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">ICAgIHJldHVybiBzdHIob3Muc3lzdGVtKCd5b3UtZ2V0IC0tanNvbiAtLWRlYnVnICVzJyAlIHVybCkpCg==</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">ICAgIHNpdGUgPSBhbnlfZG93bmxvYWQodXJsKQogICAgaWYgc2l0ZSBpcyBOb25lOgogICAgICAgIHJldHVybiAnZmFpbCcsIDUwMAo=</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">ICAgIHByaW50KHNlbGYuc3RyZWFtc1tzdHJlYW1faWRdKQo=</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgICAgICBzZWdtZW50cyA9IHNlbGYuc3RyZWFtc1tzdHJlYW1faWRdWydzZWdtZW50cyddIGlmICdzZWdtZW50cycgaW4gc2VsZi5zdHJlYW1zW3N0cmVhbV9pZF0gZWxzZSAxCg==</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ICAgICAgICAnc2VnbWVudHMnOiBzZWdtZW50cywK</text>
      </register>
      <register name="8" type="4">
        <text encoding="base64">ICAgIHNlbGYuanNvbltzdHJlYW1faWQgPSBzdHJlYW1faWQKICAgIHNlbGYuanNvbi51cmxzID0gdXJscwogICAgc2VsZi5qc29uLmV4dCA9IGV4dAogICAgc2VsZi5qc29uLnRvdGFsX3NpemUgPSB0b3RhbF9zaXplCiAgICBzZWxmLmpzb24uc2VnbWVudHMgPSBzZWdtZW50cw==</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICAgICAgICAgICAgaW1wb3J0IHRyYWNlYmFjawogICAgICAgICAgICB0cmFjZWJhY2sucHJpbnRfZXhjKGZpbGU9c3lzLnN0ZG91dCkK</text>
      </register>
      <register name=":" type="4">
        <text>q</text>
      </register>
    </registers>
    <search>
      <last-search>help</last-search>
      <last-offset />
      <last-pattern>help</last-pattern>
      <last-replace>~</last-replace>
      <last-substitute encoding="base64">XDx1cmxzXD4=</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>info-only</entry>
        <entry>--info</entry>
        <entry>url</entry>
        <entry>danmaku</entry>
        <entry>getinfo</entry>
        <entry encoding="base64">XDx1cmxzXD4=</entry>
        <entry>fid</entry>
        <entry>sd</entry>
        <entry>dry</entry>
        <entry>track</entry>
        <entry encoding="base64">XDx0cmFjZWJhY2tcPg==</entry>
        <entry>json_output</entry>
        <entry>segm</entry>
        <entry>segmen</entry>
        <entry encoding="base64">XDxzZWdtZW50c1w+</entry>
        <entry>video_profile</entry>
        <entry>video-profile</entry>
        <entry>debug</entry>
        <entry>json</entry>
        <entry>help</entry>
      </history-search>
      <history-cmd>
        <entry>qa!</entry>
        <entry>vs</entry>
        <entry>qa1</entry>
        <entry>qa</entry>
        <entry>q</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed M</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed OPEN_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>